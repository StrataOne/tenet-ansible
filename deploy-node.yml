---
- name: Deploy tenet node
  hosts: "node"
  become: true
  vars:
    sync_by_snapshot: true
    pruning_nothing: true
    config: "mainnet"
#    config: "testnet"
  tasks:
    - name: Open firewall ports
      shell: ufw allow "{{ item }}"
      with_items:
        - 8545/tcp
        - 8546/tcp
        - 26657/tcp
        - 443/tcp

    - name: adduser tenetd to a system
      ansible.builtin.user:
        name: tenetd
        shell: /sbin/nologin
        create_home: yes

    - name: get volume name
      command: "ls /mnt/"
      register: volume_name

    - name: Unmount a mounted volume
      ansible.posix.mount:
        path: /mnt/{{volume_name.stdout}}
        state: unmounted

    - name: dispaly uuid & store in variable
      command: blkid -s UUID -o value /dev/sda
      register: uuid_device

    - name: add the below lines
      blockinfile:
        path: /etc/fstab
        state: present
        block: |
          UUID={{ uuid_device.stdout }}       /home/tenetd     ext4   discard,errors=remount-ro       0 1

    - name: mount all
      become: true
      shell: "mount -a"

    - name: install golang
      ansible.builtin.apt:
        name: golang
        update_cache: yes
        state: present

    - name: install cosmovisor go package
      become: true
      shell: "go install cosmossdk.io/tools/cosmovisor/cmd/cosmovisor@latest"

    - name: copy cosmovisor to a system
      become: true
      shell: "cp /root/go/bin/cosmovisor /usr/local/bin"

    - name: create directory for cosmovisor
      file:
        path: /home/tenetd/cosmovisor/genesis/bin
        state: directory

    - name: copy tenetd to a system
      become: true
      ansible.builtin.copy:
        src: ./bin/tenetd
        dest: /home/tenetd/cosmovisor/genesis/bin/tenetd
        owner: tenetd
        group: tenetd
        mode: 0644

    - name: copy tenet project configs to VMs
      ansible.builtin.copy:
        src: "./tenet-{{ config }}/"
        dest: "/home/tenetd/.tenetd/"
        owner: tenetd
        group: tenetd
        mode: 0644

    - name: change sync method
      replace:
        path: /home/tenetd/.tenetd/config/config.toml
        regexp: "enable = false"
        replace: "enable = true"
      when: sync_by_snapshot == true

    - name: change pruning rule
      replace:
        path: /home/tenetd/.tenetd/config/app.toml
        regexp: 'pruning = "default"'
        replace: 'pruning = "nothing"'
      when: pruning_nothing == true

    - name: cosmovisor init
      become_user: tenetd
      shell: cosmovisor init /home/tenetd/cosmovisor/genesis/bin/tenetd
      environment:
        DAEMON_NAME: tenetd
        DAEMON_HOME: /home/tenetd/.tenetd
        DAEMON_RESTART_AFTER_UPGRADE: true

    - name: create config directory for cosmovisor
      file:
        path: /etc/cosmovisor
        state: directory

    - name: create environment file
      template:
        src: cosmovisor.conf.j2
        dest: /etc/cosmovisor/cosmovisor.conf

    - name: create Unit file
      template:
        src: cosmovisor.service.j2
        dest: /etc/systemd/system/cosmovisor.service

    - name: reload systemctl
      command: systemctl daemon-reload

    - name: enable service cosmovisor.service, and not touch the state
      service:
        name: cosmovisor.service
        enabled: yes

    - name: restart service cosmovisor.service, in all cases
      service:
        name: cosmovisor.service
        state: restarted